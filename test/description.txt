#
# DESCRIPTION OF MCMC TEST
#

MCMC algorithm was tested with the following input data. These parameters were used in the simulation:

options.set_rs_limit(0.01)
options.set_proposal_width_rel(0.01)
options.set_proposal_width_min(0.01)
options.set_burn_in(3000)
options.set_num_samples_processes(50000,4)
options.set_sampling_method("mcmc")
options.set_summary_statistic("sq_residual")
options.set_data_file_name("test.txt")

#
# DATA
#

def get_test_data():

    testresults = [18.0, 24.5, 3.1, 48.3, 75.1, 104.4, 124.7, 27.7, 9.1, 17.4]
    testvar1 = [5, 6, 1, 4, 9, 11, 15, 2, 3, 2]
    testvar2 = [0.1, 0.2, 0.05, 0.9, 0.6, 0.7, 0.6, 1, 0.01, 0.5]
    testdata = ObservedData()
    for i in range(len(testvar1)):
        testdata.vars.append([testvar1[i], testvar2[i]])
    testdata.res = testresults

    return testdata

def get_test_model():

    testmodel = GenerativeModel()

    testmodel.params.append("a")
    testmodel.params.append("b")
    testmodel.params.append("c")

    testmodel.vars.append("x")
    testmodel.vars.append("y")

    testmodel.res.append("z")

    testmodel.set_fun("a*x + b*y + c*x*y")

    return testmodel

def get_test_priors():

    testpriors = Prior()

    testpriors.type.append("uniform")
    testpriors.params.append([1.0, 15.0])
    testpriors.type.append("uniform")
    testpriors.params.append([1.0, 15.0])
    testpriors.type.append("uniform")
    testpriors.params.append([1.0, 15.0])

    return testpriors

#
# FIT FROM MATLAB
#

General model:
     curve(x,y) = a.*x+b.*y+c.*x.*y
     Coefficients (with 95% confidence bounds):
       a =        2.34  (1.914, 2.767)
       b =         4.1  (1.321, 6.88)
       c =        9.71  (8.905, 10.52)
	   
#
# SIMA RESULTS
#

Accepted 28.192044205125313 % samples.

----------------------------------------------------
param       | a           | b           | c
----------------------------------------------------
mean        |      2.466  |      4.275  |      9.459
stdev       |      0.456  |      0.797  |      0.754
----------------------------------------------------
 
Sampling took 52 minutes and 42 seconds.


#
# FIGURES
#

Trace.png: trace for parameter a during the simulation
Param_space.png: plot of parameter a versus parameter b during the simulation.